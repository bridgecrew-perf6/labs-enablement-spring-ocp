apiVersion: batch/v1beta1
kind: Job
metadata:
  name: release-name-simple-job-service
  labels:
    helm.sh/chart: simple-job-service-0.1.0
    app.kubernetes.io/name: simple-job-service
    app.kubernetes.io/component: simple-job-service
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-simple-job-service
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          creationTimestamp: null
          labels:
            helm.sh/chart: simple-job-service-0.1.0
            app.kubernetes.io/name: simple-job-service
            app.kubernetes.io/component: simple-job-service
            app.kubernetes.io/instance: release-name
            deploymentconfig: release-name-simple-job-service
            app.kubernetes.io/version: "1.16.0"
            app.kubernetes.io/managed-by: Helm
        spec:
          backoffLimit: 0
          containers:
            - env:
              name: simple-job-service
              image: "simple-job-service"

          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1


apiVersion: v1
kind: Service
metadata:
  name: release-name-simple-job-service
  labels:
    helm.sh/chart: simple-job-service-0.1.0
    app.kubernetes.io/name: simple-job-service
    app.kubernetes.io/component: simple-job-service
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-simple-job-service
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: tcp-8080
    - port: 8443
      protocol: TCP
      targetPort: 8443
      name: tcp-8443
  selector:
    app.kubernetes.io/name: simple-job-service
    app.kubernetes.io/component: simple-job-service
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-simple-job-service
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}