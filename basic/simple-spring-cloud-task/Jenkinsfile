node('maven-helm') {
    def tag;

    stage ('pull code') {
        sh "git clone https://github.com/edwin/labs-enablement-spring-ocp source "
    }
    stage ('mvn build') {
        dir("source") {
            tag = sh(returnStdout: true, script: "git rev-parse --short=8 HEAD").trim();

            sh "mkdir build-folder"
            sh "mkdir properties-folder"
            sh "mvn -B clean package -Dmaven.repo.local=/tmp/source/m2 -f basic/simple-spring-cloud-task/pom.xml"

            sh "cp basic/simple-spring-cloud-task/Dockerfile build-folder/Dockerfile"
            sh "cp basic/simple-spring-cloud-task/target/*.jar build-folder/app.jar"
        }
    }
    stage ('build and push') {
        dir("source") {
            sh "cat build-folder/Dockerfile | oc new-build -D - --name spring-cloud-task || true"
            sh "oc start-build spring-cloud-task --from-dir=build-folder/. --follow --wait "
            sh "oc tag cicd/spring-cloud-task:latest labs-dev/spring-cloud-task:${tag} "
            sh "oc tag cicd/spring-cloud-task:latest labs-dev/spring-cloud-task:latest "
        }
    }
    stage ('deploy as cron') {
        dir("source") {
            sh "oc run spring-cloud-task --image=image-registry.openshift-image-registry.svc:5000/labs-dev/spring-cloud-task:latest \
                        --schedule=\"*/1 * * * *\" --restart=Never || true "
            sh "oc set env cronjob.batch/spring-cloud-task --from=cm/spring-cloud-task-cm -n labs-dev || true"
            sh "oc set env cronjob.batch/spring-cloud-task --from=secret/spring-cloud-task-secret -n labs-dev  || true"
        }
    }
}